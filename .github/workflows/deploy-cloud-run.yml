name: Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: landingpage-aigenerator
  CONTAINER_PORT: 8080
  JAVA_VERSION: '17'
  MAVEN_VERSION: '3.9.5'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up Maven ${{ env.MAVEN_VERSION }}
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: ${{ env.MAVEN_VERSION }}

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Build and Push Container with Jib
        run: |
          mvn -B jib:build \
            -Djib.to.image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/app:${{ github.sha }} \
            -Djib.to.auth.username=oauth2accesstoken \
            -Djib.to.auth.password=$(gcloud auth print-access-token)

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/app:${{ github.sha }}
          env_vars: |
            SPRING_PROFILES_ACTIVE=prod
            SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
            SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
            SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
            SPRING_JPA_HIBERNATE_DDL_AUTO=validate
            SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
            SPRING_MAIL_HOST=${{ secrets.SPRING_MAIL_HOST }}
            SPRING_MAIL_PORT=${{ secrets.SPRING_MAIL_PORT }}
            SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }}
            SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }}
            SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=true
            SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=true
            SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_TRUST=ssl.gmail.com
            SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_ENABLE=true

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }} 